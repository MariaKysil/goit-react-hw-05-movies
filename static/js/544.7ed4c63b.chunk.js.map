{"version":3,"file":"static/js/544.7ed4c63b.chunk.js","mappings":"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","sources":["components/ErrorView/ErrorView.jsx","components/MovieView/MovieView.styled.js","components/MovieView/MovieView.jsx","components/MoviesView/MoviesView.styled.js","components/MoviesView/MoviesView.jsx","pages/Home/Home.jsx","services/api.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport errorImage from '../../images/error.jpg';\n\nexport const ErrorView = ({ message }) => {\n  return (\n    <div role=\"alert\">\n      <img src={errorImage} alt=\"sad cat\" width=\"240\" />\n      <h2>Sorry, something went wrong</h2>\n      <p>{message}</p>\n    </div>\n  );\n};\n\nErrorView.propTypes = {\n  message: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  text-align: center;\n  color: ${p => p.theme.colors.text};\n`;\n","import PropTypes from 'prop-types';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { Box } from 'Box';\nimport { Title } from 'components/MovieView/MovieView.styled';\nimport errorImage from '../../images/not-found.png';\n\nexport const MovieView = ({ id, poster, title }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <NavLink to={`/movies/${id}`} state={{ from: location }}>\n        <Box\n          display=\"flex\"\n          flexDirection=\"column\"\n          flexWrap=\"wrap\"\n          alignItems=\"center\"\n        >\n          <img\n            src={\n              poster ? `https://image.tmdb.org/t/p/w500/${poster}` : errorImage\n            }\n            alt=\"poster\"\n            width=\"320\"\n            height=\"400\"\n            style={{ objectFit: 'cover' }}\n          />\n          <Title>{title}</Title>\n        </Box>\n      </NavLink>\n    </>\n  );\n};\n\nMovieView.propTypes = {\n  id: PropTypes.number,\n  poster: PropTypes.string,\n  title: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const MoviesWrapper = styled.ul`\n  margin-top: ${p => p.theme.space[5]}px;\n\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: ${p => p.theme.space[4]}px;\n`;\n","import PropTypes from 'prop-types';\nimport { MovieView } from 'components/MovieView/MovieView';\nimport { MoviesWrapper } from './MoviesView.styled';\n\nexport const MoviesView = ({ movies }) => {\n  return (\n    <MoviesWrapper>\n      {movies &&\n        movies.map(movie => (\n          <li key={movie.id}>\n            <MovieView\n              id={movie.id}\n              title={movie.title}\n              poster={movie.poster_path}\n            ></MovieView>\n          </li>\n        ))}\n    </MoviesWrapper>\n  );\n};\n\nMoviesView.propTypes = {\n  movies: PropTypes.array,\n};\n","import { useEffect, useState } from 'react';\nimport { fetchTrendingMovies } from 'services/api';\nimport { ErrorView } from 'components/ErrorView/ErrorView';\nimport { MoviesView } from 'components/MoviesView/MoviesView';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    fetchTrendingMovies()\n      .then(setMovies)\n      .catch(error => setError(error))\n      .finally(setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1>Trending today</h1>\n      {!error ? (\n        <>\n          {isLoading ? <Loader /> : <MoviesView movies={movies}></MoviesView>}\n        </>\n      ) : (\n        <ErrorView message={error?.message}></ErrorView>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'f295e5cfae9c135f6b0e3c499a4f507f';\n\naxios.defaults.baseURL = BASE_URL;\n// axios.defaults.headers.common['Authorization'] = API_KEY'\n\nexport async function fetchTrendingMovies() {\n  const { data } = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return data.results;\n}\n\nexport async function searchMovie(query) {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  //   console.log(data.results);\n  return data.results;\n}\n\nexport async function getMovieDetails(movieId) {\n  const { data } = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  return data;\n}\n\nexport async function getMovieCredits(movieId) {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return data.cast;\n}\n\nexport async function getMovieReviews(movieId) {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return data.results;\n}\n"],"names":["ErrorView","message","role","src","errorImage","alt","width","Title","styled","p","theme","colors","text","MovieView","id","poster","title","location","useLocation","to","state","from","Box","display","flexDirection","flexWrap","alignItems","height","style","objectFit","MoviesWrapper","space","MoviesView","movies","map","movie","poster_path","useState","setMovies","error","setError","isLoading","setIsLoading","useEffect","fetchTrendingMovies","then","catch","finally","API_KEY","axios","data","results","searchMovie","query","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}