{"version":3,"file":"static/js/144.3d4c3098.chunk.js","mappings":"kOAEaA,EAAOC,EAAAA,GAAAA,KAAH,6CACA,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,YAAYC,IAAxB,I,mBCELC,EAAW,SAAC,GAAiD,IAAD,IAA9CC,KAAQC,EAAsC,EAAtCA,aAAcC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,UACrD,OACE,UAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,WACE,gBACEC,IACEL,EAAY,0CAC2BA,GACnCM,EAENC,IAAI,WACJC,MAAM,SAER,0BACE,SAAChB,EAAD,oBADF,IACsBS,MAEtB,0BACE,SAACT,EAAD,yBADF,IAC2BU,OAIhC,E,8BCvBYO,EAAchB,EAAAA,GAAAA,GAAH,mGAGf,SAAAC,GAAC,OAAIA,EAAEC,MAAMe,MAAM,EAAlB,ICoBV,EAnBa,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOd,EAAP,KAAae,EAAb,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBL,GAASM,KAAKH,EAC/B,GAAE,CAACH,KAGF,SAACF,EAAD,UACGV,EAAKmB,KAAI,SAAAnB,GAAI,OACZ,yBACE,SAACD,EAAD,CAAUC,KAAMA,KADTA,EAAKoB,GADF,KAOnB,C,mMCpBKC,EAAU,mCAKT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACkBC,EAAAA,GAAAA,IAAA,sCAAyCF,IAD3D,uBACGG,EADH,EACGA,KADH,kBAEEA,EAAKC,SAFP,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,yFACkBJ,EAAAA,GAAAA,IAAA,gCACIF,EADJ,kBACqBM,IAFvC,uBACGH,EADH,EACGA,KADH,kBAKEA,EAAKC,SALP,kEAQA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BhB,GAA/B,yFACkBW,EAAAA,GAAAA,IAAA,iBAAoBX,EAApB,oBAAuCS,IADzD,uBACGG,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAeP,EAAtB,+CAAO,OAAP,oBAAO,WAA+BL,GAA/B,yFACkBW,EAAAA,GAAAA,IAAA,iBACXX,EADW,4BACgBS,IAFlC,uBACGG,EADH,EACGA,KADH,kBAIEA,EAAKxB,MAJP,kEAOA,SAAe6B,EAAtB,+CAAO,OAAP,oBAAO,WAA+BjB,GAA/B,yFACkBW,EAAAA,GAAAA,IAAA,iBACXX,EADW,4BACgBS,IAFlC,uBACGG,EADH,EACGA,KADH,kBAIEA,EAAKC,SAJP,kEA5BPF,EAAAA,GAAAA,SAAAA,QAHiB,+B","sources":["components/CastView/CastView.styled.js","components/CastView/CastView.jsx","pages/Cast/Cast.styled.js","pages/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Text = styled.span`\n  font-weight: ${p => p.theme.fontWeights.bold};\n`;\n","import PropTypes from 'prop-types';\nimport { Box } from 'Box';\nimport { Text } from './CastView.styled';\nimport errorImage from '../../images/not-found.png';\n\nexport const CastView = ({ cast: { profile_path, name, character } }) => {\n  return (\n    <Box mt={5}>\n      <img\n        src={\n          profile_path\n            ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n            : errorImage\n        }\n        alt=\"an actor\"\n        width=\"250\"\n      />\n      <p>\n        <Text>Name:</Text> {name}\n      </p>\n      <p>\n        <Text>Character:</Text> {character}\n      </p>\n    </Box>\n  );\n};\n\nCastView.propTypes = {\n  profile_path: PropTypes.string,\n  name: PropTypes.string,\n  character: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const CastWrapper = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: ${p => p.theme.space[4]}px;\n`;\n","import { CastView } from 'components/CastView/CastView';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from 'services/api';\nimport { CastWrapper } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    getMovieCredits(movieId).then(setCast);\n  }, [movieId]);\n\n  return (\n    <CastWrapper>\n      {cast.map(cast => (\n        <li key={cast.id}>\n          <CastView cast={cast}></CastView>\n        </li>\n      ))}\n    </CastWrapper>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'f295e5cfae9c135f6b0e3c499a4f507f';\n\naxios.defaults.baseURL = BASE_URL;\n// axios.defaults.headers.common['Authorization'] = API_KEY'\n\nexport async function fetchTrendingMovies() {\n  const { data } = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return data.results;\n}\n\nexport async function searchMovie(query) {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  //   console.log(data.results);\n  return data.results;\n}\n\nexport async function getMovieDetails(movieId) {\n  const { data } = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  return data;\n}\n\nexport async function getMovieCredits(movieId) {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return data.cast;\n}\n\nexport async function getMovieReviews(movieId) {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return data.results;\n}\n"],"names":["Text","styled","p","theme","fontWeights","bold","CastView","cast","profile_path","name","character","Box","mt","src","errorImage","alt","width","CastWrapper","space","movieId","useParams","useState","setCast","useEffect","getMovieCredits","then","map","id","API_KEY","fetchTrendingMovies","axios","data","results","searchMovie","query","getMovieDetails","getMovieReviews"],"sourceRoot":""}